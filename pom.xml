<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.test</groupId>
    <artifactId>jenkins</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>jenkins</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <modules>
        <module>demo-common</module>
        <module>demo01</module>
        <module>demo02</module>
        <module>eureka</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <docker.image.prefix>chenxu</docker.image.prefix>
        <!-- 是镜像的前缀 -->
        <docker.registry.name>devops_test</docker.registry.name>
        <!-- docker私有仓库地址 -->
        <docker.registry.url>192.168.42.133:5000</docker.registry.url>
        <!-- docker编译地址 -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--            <plugin>-->
            <!--                <groupId>com.spotify</groupId>-->
            <!--                <artifactId>docker-maven-plugin</artifactId>-->
            <!--                <version>1.0.0</version>-->
            <!--                <configuration>-->
            <!--                    <imageName>${docker.registry.url}/${docker.image.prefix}/${project.artifactId}</imageName>-->
            <!--                    <imageTags>-->
            <!--                        <imageTag>${project.version}</imageTag>-->
            <!--                    </imageTags>-->
            <!--                    <dockerDirectory>src/main/docker</dockerDirectory>-->
            <!--                    &lt;!&ndash; 上传镜像 &ndash;&gt;-->
            <!--                    <pushImage>true</pushImage>-->
            <!--                    &lt;!&ndash; 重试次数 &ndash;&gt;-->
            <!--                    <retryPushCount>3</retryPushCount>-->

            <!--                    <resources>-->
            <!--                        <resource>-->
            <!--                            <targetPath>/</targetPath>-->
            <!--                            <directory>${project.build.directory}</directory>-->
            <!--                            <include>${project.build.finalName}.jar</include>-->
            <!--                        </resource>-->
            <!--                    </resources>-->
            <!--                    <serverId>docker-registry</serverId>-->
            <!--                </configuration>-->
            <!--            </plugin>-->

            <!--            &lt;!&ndash;复制jar包到指定目录&ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <artifactId>maven-antrun-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>gen-webadmin</id>-->
            <!--                        <phase>package</phase>-->
            <!--                        <configuration>-->
            <!--                            <tasks>-->
            <!--                                &lt;!&ndash;src/main/docker&ndash;&gt;-->
            <!--                                <copy todir="${user.home}/work" file="target/${project.artifactId}-${project.version}.${project.packaging}" />-->
            <!--                            </tasks>-->
            <!--                        </configuration>-->
            <!--                        <goals>-->
            <!--                            <goal>run</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>


</project>
